/*
 * plang logic programming language
 * Copyright (C) 2011,2012  Southern Storm Software, Pty Ltd.
 *
 * The plang package is free software: you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public License
 * as published by the Free Software Foundation, either version 3 of
 * the License, or (at your option) any later version.
 *
 * The plang package is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with the libcompiler library.  If not,
 * see <http://www.gnu.org/licenses/>.
 */

/**
 * \defgroup modules Modules and Classes - Overview
 *
 * This section of the documentation describes the add-on modules
 * and classes that are available to Plang applications.
 * The predicates defined here are only available after an
 * appropriate \ref import_1 "import/1" directive has been
 * encountered for the name of the class or module.  For example:
 *
 * \code
 * :- import(stdout).
 * :- import(words).
 * \endcode
 *
 * \par stream classes
 * \ref class_iostream "iostream",
 * \ref class_stderr "stderr",
 * \ref class_stdin "stdin",
 * \ref class_stdout "stdout"
 *
 * \par findall module
 * \ref bagof_3 "bagof/3",
 * \ref findall_3 "findall/3",
 * \ref setof_3 "setof/3"
 *
 * \par fuzzy module
 * \ref fuzzy_1 "(&lt;&lt;...&gt;&gt;)/1",
 * \ref fuzzy_1 "fuzzy/1",
 * \ref fuzzy_2 "fuzzy/2",
 * \ref fuzzy_and_2 "fuzzy_and/2",
 * \ref fuzzy_findall_3 "fuzzy_findall/3",
 * \ref fuzzy_findall_sorted_3 "fuzzy_findall_sorted/3",
 * \ref fuzzy_not_1 "fuzzy_not/1",
 * \ref fuzzy_or_2 "fuzzy_or/2",
 * \ref fuzzy_prod_2 "fuzzy_prod/2",
 * \ref fuzzy_prod_or_2 "fuzzy_prod_or/2",
 * \ref set_fuzzy_1 "set_fuzzy/1"
 *
 * \par shell module
 * \ref shell_main_1 "shell::main/1"
 *
 * \par test module
 * \ref compare_2 "compare/2",
 * \ref fail_1 "fail/1",
 * \ref fail_2 "fail/2",
 * \ref verify_1 "verify/1",
 * \ref verify_error_2 "verify_error/2",
 * \ref verify_fuzzy_1 "verify_fuzzy/1",
 * \ref verify_var_error_2 "verify_var_error/2",
 * \ref test_main_1 "test::main/1"
 *
 * \par words module
 * \ref words_adjective_1 "words::adjective/1",
 * \ref words_adverb_1 "words::adverb/1",
 * \ref words_base_form_3 "words::base_form/3",
 * \ref words_base_forms_3 "words::base_forms/3",
 * \ref words_description_5 "words::description/5",
 * \ref words_noun_1 "words::noun/1",
 * \ref words_overview_2 "words::overview/2",
 * \ref words_search_5 "words::search/5",
 * \ref words_verb_1 "words::verb/1"
 */

/**
 * \defgroup class_iostream Classes - iostream
 */
/*\@{*/
/* Defined in iostream.dox */
/*\@}*/

/**
 * \defgroup class_stdout Classes - stdout and stderr
 * \anchor class_stderr
 */
/*\@{*/
/* Defined in stdout.dox */
/*\@}*/

/**
 * \defgroup class_stdin Classes - stdin
 */
/*\@{*/
/* Defined in stdin.dox */
/*\@}*/

/**
 * \defgroup module_findall Modules - findall
 *
 * \ref bagof_3 "bagof/3",
 * \ref findall_3 "findall/3",
 * \ref setof_3 "setof/3"
 */
/*\@{*/
/* Defined in findall.dox */
/*\@}*/

/**
 * \defgroup fuzzy_logic Modules - fuzzy
 */
/*\@{*/
/* Defined in fuzzy.dox */
/*\@}*/

/**
 * \defgroup module_shell Modules - shell
 */
/*\@{*/
/* Defined in shell.lp */
/*\@}*/

/**
 * \defgroup module_test Modules - test
 */
/*\@{*/
/* Defined in test.dox */
/*\@}*/

/**
 * \defgroup module_words Modules - words
 */
/*\@{*/
/* Defined in words.c */
/*\@}*/
